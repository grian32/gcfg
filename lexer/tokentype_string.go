// Code generated by "stringer -type=TokenType"; DO NOT EDIT.

package lexer

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[LBRACKET-0]
	_ = x[RBRACKET-1]
	_ = x[LPAREN-2]
	_ = x[RPAREN-3]
	_ = x[LBRACE-4]
	_ = x[RBRACE-5]
	_ = x[ASSIGN-6]
	_ = x[COMMA-7]
	_ = x[IDENT-8]
	_ = x[INT-9]
	_ = x[FLOAT-10]
	_ = x[STRING-11]
	_ = x[BOOL-12]
	_ = x[NULL-13]
	_ = x[EOF-14]
}

const _TokenType_name = "LBRACKETRBRACKETLPARENRPARENLBRACERBRACEASSIGNCOMMAIDENTINTFLOATSTRINGBOOLNULLEOF"

var _TokenType_index = [...]uint8{0, 8, 16, 22, 28, 34, 40, 46, 51, 56, 59, 64, 70, 74, 78, 81}

func (i TokenType) String() string {
	if i >= TokenType(len(_TokenType_index)-1) {
		return "TokenType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _TokenType_name[_TokenType_index[i]:_TokenType_index[i+1]]
}
